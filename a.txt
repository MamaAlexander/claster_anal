у меня есть такой код import imaplib
import email
from email.header import decode_header
import base64
from bs4 import BeautifulSoup
import re

def read(sender_of_interest=None):
    # Очищаем файл перед записью
    with open('filtered_emails.txt', 'r+') as f:
        f.truncate(0) 

    # Подключаемся к серверу
    imap = imaplib.IMAP4_SSL("imap.gmail.com", 993)
    imap.login('remboplas@gmail.com', 'trok ekct masw xlwz')
    imap.select('INBOX')

    # Поиск всех писем
    if sender_of_interest:
        status, response = imap.uid('search', None, 'ALL', 'FROM {0}'.format(sender_of_interest))
    else:
        status, response = imap.uid('search', None, 'ALL')

    if status == 'OK':
        unread_msg_nums = response[0].split()
        print(f"Found {len(unread_msg_nums)} emails")  # Отладочная информация
    else:
        unread_msg_nums = []
        print("No emails found")

    # Инвертируем список ID, чтобы получить последние письма первыми
    unread_msg_nums = unread_msg_nums[::-1]

    data_list = []
    count = 0  # Счётчик писем

    for e_id in unread_msg_nums:
        if count >= 400:  # Ограничение на 400 последних писем
            break

        e_id = e_id.decode('utf-8')
        _, response = imap.uid('fetch', e_id, '(RFC822)')

        # Используем message_from_bytes для правильного парсинга писем
        raw_email = response[0][1]
        email_message = email.message_from_bytes(raw_email)

        # Проверка, multipart или нет, чтобы обработать текстовые и HTML части
        if email_message.is_multipart():
            for part in email_message.walk():
                content_type = part.get_content_type()
                if content_type == 'text/plain':  # Извлекаем только текстовую часть
                    body = part.get_payload(decode=True).decode('utf-8', errors='ignore')
                    data_list.append(body)
                    print(f"Added text/plain part from email {e_id}")  # Отладочная информация
                    count += 1
                    break  # Если нашли нужную часть, выходим
        else:
            # Если не multipart, просто получаем тело письма
            body = email_message.get_payload(decode=True).decode('utf-8', errors='ignore')
            data_list.append(body)
            
            count += 1

    # Запись в файл
    with open('filtered_emails.txt', 'w', encoding='utf-8') as f:
        for elem in data_list:
            # Удаляем блоки стилей <style>...</style>
            elem = re.sub(r"<style.*?>.*?</style>", "", elem, flags=re.S)
            elem = re.sub(r"&nbsp;", "", elem, flags=re.S)
            # Удаляем все HTML-теги
            elem = re.sub(r"<[^>]+>", "", elem, flags=re.S)
            
            if 'Высылаю обратную связь' in elem:
                print(f"Added non-multipart email {e_id}")  # Отладочная информация

                # Разбиваем на строки и записываем строки, если они не пустые
                for line in elem.splitlines():
                    if line.strip():  # Проверяем, не пустая ли строка
                        f.write(line + '\n')  # Записываем в файл

                # Добавляем разделитель для каждого письма
                f.write('\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n')

    # Завершаем работу с сервером
    imap.logout()

# Вызов функции
read()   with open('filtered_emails.txt', 'r') as file:
    lines = file.readlines()

text = []  # Список для хранения блоков текста
cnt = 0  # Начальная позиция для нарезки

# Проходим по всем строкам файла
for i in range(len(lines)):
    # Проверяем, если строка содержит только плюсики (ваш разделитель)
    if lines[i].strip() == '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++':
        # Добавляем блок текста от cnt до i в список text
        text.append(''.join(lines[cnt:i]).strip())
        cnt = i + 1  # Обновляем начало следующего блока

# Добавляем последний блок текста, если он есть после последней строки с плюсами
if cnt < len(lines):
    text.append(''.join(lines[cnt:]).strip())
 for i in range(len(text)):
    text = text[i]
    cortage = ()
    cortage[0] = find(text[i]) не знаю что выполняет последний фор но мне надо чтобы из каждого элемента массива text были удалены все слова до '1. Оценка.' и после '2.2.Прошлая оценка' и если нет прошлой оценки то после '​С уважением,', еще нужно убрать из текста все стоп слова но оставить цифры, следует также удалить следующие строки в тексте если они есть '2. ...(до \n)', '2. ... (до \n)', до того как ты будешь удалятб строки надо сделать из элемента массива кортеж и поместить в первый элемент кортежа "по продавцу ... (до \n)" а во второй элемент кортежа запихнуть весь оставшийся после очистки текст. тебе нужнро написать только оставшийся скрипт вместо последнего фора. для примера элементы массива содержат примерно такой текст: Добрый день. 
Высылаю обратную связь по продавцу Тарала Виталию Николаевичу,  г.Светлоград ул.Сельскохозяйственная, 29 дата: 12.10.2024 15:52.
В указанный период была: продажа.
1. Оценка.
Максимальная оценка проверок по критериям – 86 баллов. Итоги просмотра:
Уровень сервиса —  18 из 21
НЭП — 42 из 59
Продажа аксессуаров — 6 из 6
Итоговая сумма баллов с учетом обязательных и не обязательных пунктов - 66 баллов или 77%
Динамика к прошлой проверке
-Общая +12 или 14%
-Уровень сервиса +1, НЭП +5, продажа аксессуаров +6
2.Выявленные отклонения, рекомендация.
2.1. Текущая оценка от 12.10.
Продавец не показывает нагрузочной вилкой состояние заряда АКБ. 
Продавец не показывает состояние и уровень жидкости в новом АКБ. 
Продавец не выдал клиенту визитки.
Не оказал помощь в установке АКБ.
2.2.Прошлая оценка от 06.10.
Продавец не задает открытых вопросов уточняющих режим эксплуатации.
Не уточнил, какие критерии важны при выборе.
Продавец не показывает нагрузочной вилкой состояние заряда АКБ. 
Продавец не показывает состояние и уровень жидкости в новом АКБ.   
Продавец не продемонстрировал покупателю доп. товар и аксессуары. 
Не предлагал рассрочку.
Продавец не выдал клиенту визитки.
При выдаче гарантийного талона покупателю, продавец не сообщил о звонке с колл-центра.
​​​​​​​С уважением, Казарян Милена - Оператор видеонаблюдения
Отдел аналитики, мониторинга и контроля
Компания "АКБ-ЦЕНТР" & ТСС "Батарейка"
горячая линия:   8(800)222-07-70
адрес офиса: Ставропольский край, г. Минеральные Воды, ул. Московская, 29а
eco-oper3@akb-centr.com
http://avto-batt.ru/
